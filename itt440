#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/wait.h>


int main(void){
    
	int pipefds[2];
	char name[100];
	

	if (pipe(pipefds)== -1){
		perror("pipe");
		exit(EXIT_FAILURE);
	} 

	pid_t pid = fork();

	if(pid != 0){
		void sigint_handler(int sig);
		if(signal(SIGINT, sigint_handler)== SIG_ERR){
			perror("signal");
			exit(1);
		}

		printf("\nThis is parent \n");
		printf("Please enter your name: ");
		scanf("%s", name);
		
	

		close(pipefds[0]);
		write(pipefds[1], &name, sizeof(name));
		exit(EXIT_SUCCESS);
	}

	if(pid == 0){
		wait(NULL);
		close(pipefds[1]);
		read(pipefds[0], &name, sizeof(name));
		printf("This is child ");
		printf("\nYour message is %s\n", name);
		close(pipefds[0]);
	}

	return EXIT_SUCCESS;
}

void sigint_handler(int sig){
	printf("Process terminated. Do not disturb!\n");
}
